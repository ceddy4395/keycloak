name: Keycloak CI

on:
  push:
    branches-ignore:
      - main
      - dependabot/**
  pull_request:
  workflow_dispatch:

env:
  MAVEN_ARGS: "-B -nsu -Daether.connector.http.connectionMaxTtl=25"
  SUREFIRE_RERUN_FAILING_COUNT: 2
  SUREFIRE_RETRY: "-Dsurefire.rerunFailingTestsCount=2"

concurrency:
  # Only cancel jobs for PR updates
  group: ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  conditional:
    name: Check conditional workflows and jobs
    runs-on: ubuntu-22.04
    outputs:
      ci: ${{ steps.conditional.outputs.ci }}
      ci-store: ${{ steps.conditional.outputs.ci-store }}
      ci-sssd: ${{ steps.conditional.outputs.ci-sssd }}
      ci-store-matrix: ${{ steps.conditional-stores.outputs.matrix }}
    permissions: write-all
    timeout-minutes: 1
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - name: Run conditional action
        id: conditional
        uses: ./.github/actions/conditional
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate matrix
        id: conditional-stores
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: .github/scripts/generate-matrix.sh
  build:
    name: Build
    if: ${{ needs.conditional.outputs.ci == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-22.04
    needs: conditional
    permissions: {}
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - name: Build Keycloak
        uses: ./.github/actions/build-keycloak

  unit-tests:
    name: Base UT
    runs-on: ubuntu-22:04
    needs: build
    timeout-minutes: 30
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Do checkout
        uses: actions/checkout@b4ffde6

      - id: unit-test-setup
        name: Unit test setup
        uses: ./.github/actions/unit-test-setup

      - name: Run unit tests
        run: .github/scripts/run-unit-tests.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: unit-tests

  base-integration-tests:
    name: Base IT
    needs: build
    runs-on: ubuntu-22:04
    timeout-minutes: 100
    strategy:
      matrix:
        group: [1, 2, 3, 4, 5, 6]
      fail-fast: false
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run base tests (${{env.TESTS}})
        env:
          TESTS: 'testsuite/integration-arquillian/tests/base/testsuites/base-suite.sh ${{ matrix.group }}'
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-quarkus "-Dwebdriver.chrome.driver=$CHROMEWEBDRIVER/chromedriver" -Dtest=$TESTS -pl testsuite/integration-arquillian/tests/base 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        name: Upload flaky tests
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Base IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: base-integration-tests-${{ matrix.group }}

  adapter-integration-tests:
    name: Adapter IT
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 100
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Build adapter distributions
        run: ./mvnw install -DskipTests -f distribution/pom.xml

      - name: Build app servers
        run: ./mvnw install -DskipTests -Pbuild-app-servers -f testsuite/integration-arquillian/servers/app-server/pom.xml

      - name: Run adapter tests (${{env.TESTS}})
        env:
          TESTS: "org.keycloak.testsuite.adapter.**"
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-quarkus -Papp-server-wildfly "-Dwebdriver.chrome.driver=$CHROMEWEBDRIVER/chromedriver" -Dtest=$TESTS -pl testsuite/integration-arquillian/tests/base 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Base IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: adapter-integration-tests

  quarkus-unit-tests:
    name: Quarkus UT
    needs: build
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      # We want to download Keycloak artifacts
      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run unit tests
        run: ./mvnw test -f quarkus/pom.xml -pl '!tests,!tests/junit5,!tests/integration,!dist'

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: quarkus-unit-tests

  quarkus-integration-tests:
    name: Quarkus IT
    needs: build
    timeout-minutes: 115
    permissions: write-all
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        server: [sanity-check-zip, zip, container, storage]
        exclude:
          - os: windows-latest
            server: zip
            param: ""
          - os: windows-latest
            server: container
            param: -Dkc.quarkus.tests.dist=docker
          - os: windows-latest
            server: storage
            param: -Ptest-database -Dtest=PostgreSQLDistTest,MariaDBDistTest#testSuccessful,MySQLDistTest#testSuccessful,DatabaseOptionsDistTest,JPAStoreDistTest,HotRodStoreDistTest,MixedStoreDistTest,TransactionConfigurationDistTest,ExternalInfinispanTest
          - os: ubuntu-latest
            server: sanity-check-zip
            param: -Dtest=StartCommandDistTest,StartDevCommandDistTest,BuildAndStartDistTest,ImportAtStartupDistTest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: github.actor != 'dependabot[bot]'
    env:
      MAVEN_OPTS: -Xmx1024m
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: unit-test-setup
        name: Unit test setup
        uses: ./.github/actions/unit-test-setup

      # Not sure why, but needs to re-build otherwise there's some failures starting up
      - name: Build quarkus integration Tests
        run: ./mvnw install -pl quarkus/tests/integration -am -DskipTests
      - name: Run Quarkus integration Tests
        run: ./mvnw test -pl quarkus/tests/integration ${PARAMS["${{ matrix.server }}"]} 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: quarkus-integration-tests-${{ matrix.os }}-${{ matrix.server }}

  jdk-integration-tests:
    name: Java Distribution IT
    needs: build
    timeout-minutes: 100
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dist: [temurin]
        version: [19]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    if: github.actor != 'dependabot[bot]'
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup
        with:
          jdk-dist: ${{ matrix.dist }}
          jdk-version: ${{ matrix.version }}

      - name: Prepare Quarkus distribution with current JDK
        run: ./mvnw install -e -pl testsuite/integration-arquillian/servers/auth-server/quarkus

      - name: Run base tests (${{env.TESTS}})
        env:
          TESTS: testsuite/integration-arquillian/tests/base/testsuites/suite.sh jdk
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-quarkus -Dtest=$TESTS -pl testsuite/integration-arquillian/tests/base 2>&1 | misc/log/trimmer.sh

      - name: Build with JDK
        run: ./mvnw install -e -DskipTests -DskipExamples

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Java Distribution IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: jdk-integration-tests-${{ matrix.os }}-${{ matrix.dist }}-${{ matrix.version }}

  persistent-sessions-tests:
    name: Persistent Sessions IT
    needs: [build, conditional]
    if: ${{needs.conditional.outputs.ci-store == 'true' && github.actor != 'dependabot[bot]'}}
    runs-on: ubuntu-22.04
    timeout-minutes: 150
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run base tests (${{env.TESTS}})
        env:
          TESTS: testsuite/integration-arquillian/tests/base/testsuites/suite.sh persistent-sessions
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-quarkus -Dauth.server.features=persistent-user-sessions,persistent-user-sessions-no-cache -Dtest=$TESTS -pl testsuite/integration-arquillian/tests/base 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{github.repository == 'keycloak/keycloak'}}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Store IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: store-integration-tests-${{ matrix.db }}

      - name: EC2 Maven Logs
        if: ${{ failure() && github.repository == 'keycloak/keycloak' }}
        uses: actions/upload-artifact@a8a3f3a
        with:
          name: store-it-mvn-logs
          path: .github/scripts/ansible/files

      - name: Delete Aurora EC2 Instance
        if: ${{ always() && matrix.db == 'aurora-postgres' && github.repository == 'keycloak/keycloak'}}
        working-directory: .github/scripts/ansible
        env:
          CLUSTER_NAME: ${{ steps.aurora-tests.outputs.ec2_cluster }}
        run: ./aws_ec2.sh delete ${{ steps.aurora-init.outputs.region }}

      - name: Delete Aurora DB
        if: ${{ always() && matrix.db == 'aurora-postgres' && github.repository == 'keycloak/keycloak'}}
        uses: ./.github/actions/aurora-delete-database
        with:
          name: ${{ steps.aurora-init.outputs.name }}
          region: ${{ steps.aurora-init.outputs.region }}

  store-integration-tests:
    name: Store IT
    needs: [build, conditional]
    if: ${{ needs.conditional.outputs.ci-store == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 150
    strategy:
      matrix:
        db: ${{ fromJson(needs.conditional.outputs.ci-store-matrix) }}
      fail-fast: false
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: aurora-init
        name: Initialize Aurora environment
        if: ${{ matrix.db == 'aurora-postgres' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: .github/scripts/aurora/init-aurora.sh

      - id: aurora-create
        name: Create Aurora DB
        if: ${{ matrix.db == 'aurora-postgres' }}
        uses: ./.github/actions/aurora-create-database
        with:
          name: ${{ steps.aurora-init.outputs.name }}
          password: ${{ steps.aurora-init.outputs.password }}
          region: ${{ steps.aurora-init.outputs.region }}

      - id: integration-test-setup
        name: Integration test setup
        if: ${{ matrix.db != 'aurora-postgres' }}
        uses: ./.github/actions/integration-test-setup

      - name: Run Aurora tests on EC2
        id: aurora-tests
        if: ${{ matrix.db == 'aurora-postgres' }}
        env:
          ENDPOINT: ${{ steps.aurora-create.outputs.endpoint }}
          PASSWORD: ${{ steps.aurora-init.outputs.password }}
          REGION: ${{ steps.aurora-init.outputs.region }}
          DB: ${{ matrix.db }}
        run: ..github/scripts/aurora/test-aurora.sh
      - name: Run base tests (${{env.TEST}})
        if: ${{ matrix.db != 'aurora-postgres' }}
        env:
          TEST: testsuite/integration-arquillian/tests/base/testsuites/suite.sh database
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-quarkus -Pdb-${{ matrix.db }} -Dtest=$TESTS -pl testsuite/integration-arquillian/tests/base 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        name: Upload flaky tests
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Store IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: store-integration-tests-${{ matrix.db }}

      - name: EC2 Maven Logs
        if: ${{ failure() && github.repository == 'keycloak/keycloak' }}
        uses: actions/upload-artifact@a8a3f3a
        with:
          name: store-it-mvn-logs
          path: .github/scripts/ansible/files

      - name: Delete Aurora EC2 Instance
        if: ${{ always() && matrix.db == 'aurora-postgres' && github.repository == 'keycloak/keycloak'}}
        working-directory: .github/scripts/ansible
        run: |
          export CLUSTER_NAME=${{ steps.aurora-tests.outputs.ec2_cluster }}
          ./aws_ec2.sh delete ${{ steps.aurora-init.outputs.region }}

      - name: Delete Aurora DB
        if: ${{ always() && matrix.db == 'aurora-postgres' && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/aurora-delete-database
        with:
          name: ${{ steps.aurora-init.outputs.name }}
          region: ${{ steps.aurora-init.outputs.region }}

  store-model-tests:
    name: Store Model Tests
    runs-on: ubuntu-22.04
    needs: [build, conditional]
    if: ${{needs.conditional.outputs.ci-store == 'true' && github.actor != 'dependabot[bot]'}}
    timeout-minutes: 75
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run model tests
        run: testsuite/model/test-all-profiles.sh ${{ env.SUREFIRE_RETRY }}

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Store Model Tests

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: store-model-tests

  clustering-integration-tests:
    name: Clustering IT
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 35
    env:
      MAVEN_OPTS: -Xmx1024m
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run cluster tests
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-cluster-quarkus -Dsession.cache.owners=2 -Dtest=**.cluster.** -pl testsuite/integration-arquillian/tests/base 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Clustering IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: clustering-integration-tests

  fips-unit-tests:
    name: FIPS UT
    runs-on: ubuntu-22.04
    needs: build
    timeout-minutes: 20
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - name: Make Fake fips
        working-directory: .github/fake_fips
        run: make
      - name: insmod fake_fips
        working-directory: .github/fake_fips
        run: sudo insmod fake_fips.ko

      - id: unit-test-setup
        name: Unit test setup
        uses: ./.github/actions/unit-test-setup

      - name: Run crypto tests
        run: docker run --rm --workdir /github/workspace -v "${{ github.workspace }}":"/github/workspace" -v "$HOME/.m2":"/root/.m2" registry.access.redhat.com/ubi8/ubi:latest .github/scripts/run-fips-ut.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: fips-unit-tests

  fips-integration-tests:
    name: FIPS IT
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    strategy:
      matrix:
        mode: [non-strict, strict]
      fail-fast: false
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - name: Fake fips
        run: |
          cd .github/fake_fips
          make
          sudo insmod fake_fips.ko

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup
        with:
          jdk-version: 17

      - name: Build adapter distributions
        run: ./mvnw install -DskipTests -f distribution/pom.xml

      - name: Build app servers
        run: ./mvnw install -DskipTests -Pbuild-app-servers -f testsuite/integration-arquillian/servers/app-server/pom.xml


      - name: Prepare Quarkus distribution with BCFIPS
        run: ./mvnw install -e -pl testsuite/integration-arquillian/servers/auth-server/quarkus -Pauth-server-quarkus,auth-server-fips140-2

      - name: Run base tests
        run: docker run --rm --workdir /github/workspace -e "SUREFIRE_RERUN_FAILING_COUNT" -v "${{ github.workspace }}":"/github/workspace" -v "$HOME/.m2":"/root/.m2" registry.access.redhat.com/ubi8/ubi:latest .github/scripts/run-fips-it.sh ${{ matrix.mode }}

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: FIPS IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: fips-integration-tests-${{ matrix.mode }}

  forms-integration-tests:
    name: Forms IT
    runs-on: ubuntu-22.04
    needs: build
    timeout-minutes: 75
    strategy:
      matrix:
        browser: [chrome, firefox]
      fail-fast: false
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run Forms IT (${{env.TEST}})
        env:
          TEST: testsuite/integration-arquillian/tests/base/testsuites/suite.sh forms
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-quarkus -Dtest=$TESTS -Dbrowser=${{ matrix.browser }} "-Dwebdriver.chrome.driver=$CHROMEWEBDRIVER/chromedriver" "-Dwebdriver.gecko.driver=$GECKOWEBDRIVER/geckodriver" -f testsuite/integration-arquillian/tests/base/pom.xml 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Forms IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: forms-integration-tests-${{ matrix.browser }}

  webauthn-integration-tests:
    name: WebAuthn IT
    runs-on: ubuntu-22.04
    needs: build
    timeout-minutes: 45
    strategy:
      matrix:
        browser:
          - chrome
          # - firefox  disabled until https://github.com/keycloak/keycloak/issues/20777 is resolved
      fail-fast: false
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      # Don't use Chrome for testing (just regular Chrome) until https://github.com/keycloak/keycloak/issues/22214 is resolved
      # - id: install-chrome
      #  name: Install Chrome browser
      #  uses: ./.github/actions/install-chrome
      #  if: matrix.browser == 'chrome'

      - name: Run WebAuthn IT
        run: ./mvnw test ${{ env.SUREFIRE_RETRY }} -Pauth-server-quarkus -Dtest=org.keycloak.testsuite.webauthn.**.*Test -Dbrowser=${{ matrix.browser }} "-Dwebdriver.chrome.driver=$CHROMEWEBDRIVER/chromedriver" "-Dwebdriver.gecko.driver=$GECKOWEBDRIVER/geckodriver" -Pwebauthn -f testsuite/integration-arquillian/tests/other/pom.xml 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{github.repository == 'keycloak/keycloak'}}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: WebAuthn IT

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: webauthn-integration-tests-${{ matrix.browser }}

  sssd-unit-tests:
    name: SSSD
    runs-on: ubuntu-22.04
    if: ${{ needs.conditional.outputs.ci-sssd == 'true' && github.actor != 'dependabot[bot]' }}
    needs:
      - conditional
      - build
    timeout-minutes: 30
    permissions: write-all
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - id: weekly-cache-key
        name: Key for weekly rotation of cache
        shell: bash
        run: echo "key=ipa-data-`date -u "+%Y-%U"`" >> $GITHUB_OUTPUT

      - id: cache-maven-repository
        name: ipa-data cache
        uses: actions/cache@0c45773
        with:
          path: ~/ipa-data.tar
          key: ${{ steps.weekly-cache-key.outputs.key }}

      - name: Run tests
        run: .github/scripts/run-ipa.sh "${{ github.workspace }}"

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: sssd-unit-tests

  migration-tests:
    name: Migration Tests
    runs-on: ubuntu-22.04
    needs: build
    timeout-minutes: 45
    strategy:
      matrix:
        old-version: [19.0.3]
        database: [postgres, mysql, oracle, mssql, mariadb]
      fail-fast: false
    permissions: write-all
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run Migration Tests
        env:
          DATABASE: ${{ matrix.database }}
          OLD_VERSION: ${{ matrix.old-version }}
        run: .github/scripts/migration-test.sh

      - name: Upload JVM Heapdumps
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        if: ${{ github.repository == 'keycloak/keycloak' }}
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Migration Tests

      - name: Surefire reports
        if: ${{ always() && github.repository == 'keycloak/keycloak' }}
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: migration-tests-${{ matrix.old-version }}-${{ matrix.database }}

  check:
    name: Status Check - Keycloak CI
    if: ${{ always() && github.actor != 'dependabot[bot]' }}
    permissions: {}
    timeout-minutes: 1
    needs:
      - conditional
      - build
      - unit-tests
      - base-integration-tests
      - adapter-integration-tests
      - quarkus-unit-tests
      - quarkus-integration-tests
      - jdk-integration-tests
      - store-integration-tests
      - persistent-sessions-tests
      - store-model-tests
      - clustering-integration-tests
      - fips-unit-tests
      - fips-integration-tests
      - forms-integration-tests
      - webauthn-integration-tests
      - sssd-unit-tests
      - migration-tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde6
      - name: Check status of all jobs
        uses: ./.github/actions/status-check
        with:
          jobs: ${{ toJSON(needs) }}
